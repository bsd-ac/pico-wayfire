#!/bin/bash

########## GENERIC START ##########

clean_exit() {
    _exit_status=$?
    trap - EXIT
    info "exiting..."
    [ $# -ne 0 ] && {
	      trap - "$1"
	      kill -s "$1" -$$
    }
    exit "$_exit_status"
}

# shellcheck disable=2034,2046
set_defaults() {
    set -e
    trap 'clean_exit' EXIT TERM
    trap 'clean_exit HUP' HUP
    trap 'clean_exit INT' INT
    IFS=' '
    set -- $(printf '\n \r \t \033')
    nl=$1 cr=$2 tab=$3 esc=$4
    IFS=\ $tab
}

info()  { printf %s\\n "${__green}${__bold}LOG${__reset}: $*"; }
warn()  { printf %s\\n "${__yellow}${__bold}WARN${__reset}: $*" >&2; }
error() {
    _error=${1:-1}
    shift
    printf %s\\n "${__red}${__bold}ERROR${__reset}: $*" >&2
    exit "$_error"
}
die() {
    error 1 "$*"
}

ask_yn() {
    local __reply
    read -p "$* " -n 1 -r __reply
    printf \\n
    if [[ $__reply =~ ^[Yy]$ ]]; then
       return 0
    fi
    return 1
}

set_defaults

if [ -v TERM ] && [ -n "${TERM}" ] && [ "${TERM}" != "dumb" ]; then
    export __bold="$(tput bold)" \
    __red="$(tput setaf 1)" \
    __green="$(tput setaf 2)" \
    __yellow="$(tput setaf 3)" \
    __blue="$(tput setaf 4)" \
    __magenta="$(tput setaf 5)" \
    __cyan="$(tput setaf 6)" \
    __white="$(tput setaf 7)" \
    __reset="$(tput sgr0)"
fi

########## GENERIC END ##########

CDIR="${EPREFIX}/usr/share/wayfire-de"

if [ -z ${HOME+unset} ]; then
    die "No HOME was defined"
fi

info "Creating user ~/.config folder"
mkdir -p "${HOME}"/.config || die "Could not create ~/.config"

info "Setting up themes"
gsettings set org.gnome.desktop.interface gtk-theme Sweet || warn "Could not change gtk-theme"
gsettings set org.gnome.desktop.interface icon-theme wayfire-de || warn "Could not change icon theme"
gsettings set org.gnome.desktop.interface cursor-theme Bibata-Modern-Classic || warn "Could not change cursor theme"

info "Setting up screenshot folders"
mkdir -p "${HOME}"/Pictures/Screenshots || warn "Could not create ~/Pictures/screenshots folder"

info "Setting up nwg-launchers config"
cp -r "${CDIR}"/nwg-launchers ~/.config || warn "Could not create ~/.config/nwg-launchers and children"

info "Setting up wallpaper management"
WDIR="${HOME}"/.config/wayfire-de/wallpapers
mkdir -p "${WDIR}" || warn "Could not create ~/.wayfire-de/wallpapers"
touch "${WDIR}"/.DO_ROTATE || warn "Could not setup wallpaper rotation"
touch "${WDIR}"/.current
if [[ ! -f "${WDIR}"/default ]]; then
    cp /usr/share/wayfire-de/default_wallpaper "${WDIR}"/default || \
        warn "Could not copy the default wallpaper, oguri will fail to start"
fi
cp -a "${CDIR}"/oguri.conf "${HOME}"/.config/oguri/config || warn "Could not setup ~/.config/oguri/config"

info "Setting up waybar config"
mkdir -p "${HOME}"/.config/waybar && cp -a "${CDIR}"/waybar/. "${HOME}"/.config/waybar || \
	warn "Could not setup waybar config"

info "Setting up terminator config"
mkdir -p "${HOME}"/.config/terminator/plugins || warn "Could not create ~/.config/terminator/plugins"
cp "${CDIR}"/terminator.conf "${HOME}"/.config/terminator/config || warn "Could not create ~/.config/terminator/config"
cp "${CDIR}"/terminator-themes.py "${HOME}"/.config/terminator/plugins/ || warn "Could not create ~/.config/terminator/plugins/terminator-themes.py"

info "Setting up Wayfire config"
cp "${CDIR}"/wayfire.ini "${HOME}"/.config/wayfire.ini || warn "Could not create ~/.config/wayfire.ini config"

########## FINISHED ##########
info "Finished setting up Wayfire DE"
